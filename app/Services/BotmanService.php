<?php

namespace App\Services;

use BotMan\BotMan\BotMan;
use BotMan\BotMan\Messages\Incoming\Answer;
use BotMan\BotMan\Messages\Outgoing\Actions\Button;
use BotMan\BotMan\Messages\Outgoing\Question;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;

class BotManService
{
    protected $botman;
    protected $messages = [];

    public function __construct(BotMan $botman)
    {
        $this->botman = $botman;
    }

    public function handle()
    {
        $this->registerCommands();
        $this->botman->listen();
    }

    protected function registerCommands()
    {
        // Comando de saludo con m√°s variaciones
        $this->botman->hears('(hola|buenos d√≠as|buenas tardes|buenas noches|saludos|hey|hi|hello|buen d√≠a)', function (BotMan $bot) {
            $this->handleGreeting($bot);
        });

        // Comando de certificados con m√°s contexto
        $this->botman->hears('(certificado|certificados|congreso|diploma|constancia|acreditaci√≥n|acreditaci√≥n de asistencia|certificado de participaci√≥n)', function (BotMan $bot) {
            $this->handleCertificates($bot);
        });

        // Comando de inscripci√≥n m√°s detallado
        $this->botman->hears('(inscripci√≥n|inscribir|curso|cursos|programa|programas|matr√≠cula|matricular|registro|registrar)', function (BotMan $bot) {
            $this->handleRegistration($bot);
        });

        // Comando de contacto m√°s completo
        $this->botman->hears('(contacto|tel√©fono|direcci√≥n|email|correo|ubicaci√≥n|d√≥nde est√°n|c√≥mo contactar|c√≥mo comunicarme)', function (BotMan $bot) {
            $this->handleContact($bot);
        });

        // Comando de ayuda m√°s espec√≠fico
        $this->botman->hears('(ayuda|soporte|informaci√≥n|info|c√≥mo funciona|qu√© puedo hacer|necesito ayuda)', function (BotMan $bot) {
            $this->handleHelp($bot);
        });

        // Comando por defecto con sugerencias
        $this->botman->fallback(function (BotMan $bot) {
            $this->handleFallback($bot);
        });
    }

    protected function handleGreeting(BotMan $bot)
    {
        $hour = date('H');
        $greeting = '';

        if ($hour >= 5 && $hour < 12) {
            $greeting = '¬°Buenos d√≠as!';
        } elseif ($hour >= 12 && $hour < 19) {
            $greeting = '¬°Buenas tardes!';
        } else {
            $greeting = '¬°Buenas noches!';
        }

        $this->addMessage($greeting . ' Soy el asistente virtual de Fundaci√≥n Educar para la Vida. ¬øEn qu√© puedo ayudarte hoy?');
        $this->addMessage('Puedo ayudarte con:');

        $question = Question::create('Selecciona una opci√≥n:')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('main_menu')
            ->addButtons([
                Button::create('üìã Certificados')->value('certificados'),
                Button::create('üéì Cursos')->value('cursos'),
                Button::create('üìû Contacto')->value('contacto'),
                Button::create('‚ùì Ayuda')->value('ayuda')
            ]);
        $this->addMessage($question);
    }

    protected function handleCertificates(BotMan $bot)
    {
        $this->addMessage('Sobre los certificados de congresos:');
        $this->addMessage('1Ô∏è‚É£ Debes estar inscrito y haber completado los requisitos de asistencia.');
        $this->addMessage('2Ô∏è‚É£ Los certificados se habilitan cuando el estado cambia a "Certificado Disponible".');
        $this->addMessage('3Ô∏è‚É£ Recibir√°s una notificaci√≥n por correo electr√≥nico cuando est√© listo.');
        $this->addMessage('4Ô∏è‚É£ El certificado incluye tu nombre completo, el nombre del congreso y la fecha.');
        $this->addMessage('5Ô∏è‚É£ Puedes descargarlo en formato PDF desde tu panel de usuario.');

        $question = Question::create('¬øNecesitas ayuda adicional?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('certificate_help')
            ->addButtons([
                Button::create('S√≠, necesito ayuda')->value('help_cert'),
                Button::create('No, gracias')->value('no_help'),
                Button::create('Volver al men√∫ principal')->value('main_menu')
            ]);
        $this->addMessage($question);
    }

    protected function handleRegistration(BotMan $bot)
    {
        $this->addMessage('Para inscribirte en nuestros cursos:');
        $this->addMessage('1Ô∏è‚É£ Visita nuestra p√°gina web');
        $this->addMessage('2Ô∏è‚É£ Selecciona el curso de tu inter√©s');
        $this->addMessage('3Ô∏è‚É£ Completa el formulario de inscripci√≥n');
        $this->addMessage('4Ô∏è‚É£ Realiza el pago correspondiente');
        $this->addMessage('5Ô∏è‚É£ Recibir√°s un correo de confirmaci√≥n');
        $this->addMessage('6Ô∏è‚É£ Accede a tu panel de usuario para ver los detalles');

        $question = Question::create('¬øQu√© te gustar√≠a hacer?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('show_courses')
            ->addButtons([
                Button::create('Ver cursos disponibles')->value('show_courses'),
                Button::create('Ver precios')->value('show_prices'),
                Button::create('Volver al men√∫ principal')->value('main_menu')
            ]);
        $this->addMessage($question);
    }

    protected function handleContact(BotMan $bot)
    {
        $this->addMessage('Puedes contactarnos a trav√©s de:');
        $this->addMessage('üìû Tel√©fono: (+591) 72087186');
        $this->addMessage('üìß Email: contacto@educarparalavida.org.bo');
        $this->addMessage('üìç Direcci√≥n: Av. Melchor P√©rez de Olgu√≠n e Idelfonso Murg√≠a Nro. 1253, Cochabamba - Bolivia');
        $this->addMessage('‚è∞ Horario: Lun - Vier: 9AM a 5PM');
        $this->addMessage('üåê Sitio web: www.educarparalavida.org.bo');
        $this->addMessage('üì± WhatsApp: (+591) 72087186');

        $question = Question::create('¬øNecesitas m√°s informaci√≥n?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('contact_help')
            ->addButtons([
                Button::create('S√≠, m√°s informaci√≥n')->value('more_info'),
                Button::create('Volver al men√∫ principal')->value('main_menu')
            ]);
        $this->addMessage($question);
    }

    protected function handleHelp(BotMan $bot)
    {
        $this->addMessage('Puedo ayudarte con:');
        $this->addMessage('1Ô∏è‚É£ Informaci√≥n sobre certificados y acreditaciones');
        $this->addMessage('2Ô∏è‚É£ Proceso de inscripci√≥n a cursos y programas');
        $this->addMessage('3Ô∏è‚É£ Informaci√≥n de contacto y ubicaci√≥n');
        $this->addMessage('4Ô∏è‚É£ Horarios y fechas importantes');
        $this->addMessage('5Ô∏è‚É£ Requisitos y documentaci√≥n necesaria');
        $this->addMessage('6Ô∏è‚É£ Dudas sobre pagos y facturaci√≥n');
        $this->addMessage('Solo preg√∫ntame lo que necesites saber.');

        $question = Question::create('¬øSobre qu√© tema necesitas ayuda?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('help_topic')
            ->addButtons([
                Button::create('Certificados')->value('certificates'),
                Button::create('Inscripciones')->value('registration'),
                Button::create('Contacto')->value('contact'),
                Button::create('Volver al men√∫ principal')->value('main_menu')
            ]);
        $this->addMessage($question);
    }

    protected function handleFallback(BotMan $bot)
    {
        $this->addMessage('Lo siento, no entiendo tu pregunta. Puedo ayudarte con:');
        $this->addMessage('1Ô∏è‚É£ Certificados y acreditaciones');
        $this->addMessage('2Ô∏è‚É£ Inscripciones a cursos');
        $this->addMessage('3Ô∏è‚É£ Informaci√≥n de contacto');
        $this->addMessage('4Ô∏è‚É£ Horarios y ubicaciones');
        $this->addMessage('Por favor, intenta reformular tu pregunta o selecciona una de las opciones del men√∫.');

        $question = Question::create('¬øQu√© te gustar√≠a hacer?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('fallback_menu')
            ->addButtons([
                Button::create('Ver men√∫ principal')->value('main_menu'),
                Button::create('Contactar soporte')->value('support')
            ]);
        $this->addMessage($question);
    }

    protected function addMessage($message)
    {
        if ($message instanceof Question) {
            $this->messages[] = [
                'type' => 'buttons',
                'buttons' => $message->getButtons()
            ];
        } else {
            $this->messages[] = [
                'type' => 'text',
                'text' => $message
            ];
        }
    }

    public function getMessages()
    {
        return $this->messages;
    }

    protected function handleLogin(BotMan $bot)
    {
        $loginUrl = route('login');
        $bot->reply('Para acceder a tu cuenta:');
        $bot->reply("1Ô∏è‚É£ Puedes iniciar sesi√≥n directamente <a href='$loginUrl'>aqu√≠</a>.");
        $bot->reply("2Ô∏è‚É£ O si prefieres, puedo ayudarte con el proceso paso a paso.");

        $question = Question::create('¬øC√≥mo prefieres continuar?')
            ->fallback('No se pudo mostrar las opciones')
            ->callbackId('login_options')
            ->addButtons([
                Button::create('Ir a la p√°gina de login')->value('redirect'),
                Button::create('Ay√∫dame con el proceso')->value('help'),
            ]);

        $bot->ask($question, function (Answer $answer, BotMan $bot) use ($loginUrl) {
            if ($answer->isInteractiveMessageReply()) {
                if ($answer->getValue() === 'redirect') {
                    $bot->reply("Te redirijo a la p√°gina de inicio de sesi√≥n: <a href='$loginUrl'>Iniciar sesi√≥n</a>");
                } else {
                    $bot->ask('Por favor, introduce tu correo electr√≥nico:', function (Answer $answer, BotMan $bot) {
                        $email = $answer->getText();

                        $bot->userStorage()->save([
                            'email' => $email,
                        ]);

                        $bot->ask('Ahora, introduce tu contrase√±a:', function (Answer $answer, BotMan $bot) {
                            $password = $answer->getText();

                            try {
                                if ($this->validateCredentials($bot->userStorage()->find()['email'], $password)) {
                                    $bot->reply('¬°Inicio de sesi√≥n exitoso! Bienvenido.');
                                    $bot->reply('¬øEn qu√© m√°s puedo ayudarte hoy?');
                                } else {
                                    $bot->reply('Correo electr√≥nico o contrase√±a incorrectos. Por favor, intenta de nuevo o usa la opci√≥n "Olvid√© mi contrase√±a" en la p√°gina de inicio de sesi√≥n.');
                                }
                            } catch (\Exception $e) {
                                $bot->reply('Lo siento, ocurri√≥ un error al intentar iniciar sesi√≥n. Por favor, intenta m√°s tarde o contacta a soporte t√©cnico.');
                                Log::error('Error en inicio de sesi√≥n del bot: ' . $e->getMessage());
                            }
                        });
                    });
                }
            }
        });
    }

    protected function validateCredentials($email, $password)
    {
        try {
            // Implementaci√≥n de la autenticaci√≥n
            // Por ejemplo, usando Auth::attempt() de Laravel
            return Auth::attempt([
                'email' => $email,
                'password' => $password
            ]);
        } catch (\Exception $e) {
            Log::error('Error validando credenciales: ' . $e->getMessage());
            return false;
        }
    }

    public function handleMessage($message)
    {
        $this->messages = []; // Limpiar mensajes anteriores

        if (preg_match('/(hola|buenos d√≠as|buenas tardes|buenas noches|saludos|hey|hi|hello|buen d√≠a)/i', $message)) {
            $this->handleGreeting($this->botman);
        } elseif (preg_match('/(certificado|certificados|congreso|diploma|constancia|acreditaci√≥n|acreditaci√≥n de asistencia|certificado de participaci√≥n)/i', $message)) {
            $this->handleCertificates($this->botman);
        } elseif (preg_match('/(inscripci√≥n|inscribir|curso|cursos|programa|programas|matr√≠cula|matricular|registro|registrar)/i', $message)) {
            $this->handleRegistration($this->botman);
        } elseif (preg_match('/(contacto|tel√©fono|direcci√≥n|email|correo|ubicaci√≥n|d√≥nde est√°n|c√≥mo contactar|c√≥mo comunicarme)/i', $message)) {
            $this->handleContact($this->botman);
        } elseif (preg_match('/(ayuda|soporte|informaci√≥n|info|c√≥mo funciona|qu√© puedo hacer|necesito ayuda)/i', $message)) {
            $this->handleHelp($this->botman);
        } else {
            $this->handleFallback($this->botman);
        }
    }
}
